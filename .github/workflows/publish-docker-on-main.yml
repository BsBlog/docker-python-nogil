name: Publish Docker on main

on:
  push:
    branches: ['main']

  workflow_dispatch: {}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: BsBlog/python-nogil

jobs:
  Prepare:
    name: Prepare Environment
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Convert repository name to lowercase
        id: convert
        run: |
          IMAGE_NAME=$(echo $IMAGE_NAME | tr '[:upper:]' '[:lower:]')
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          D_IMAGE_NAME=$(echo $IMAGE_NAME | cut -d'/' -f2)
          echo "D_IMAGE_NAME=$D_IMAGE_NAME" >> $GITHUB_ENV

      - name: Delete old Docker images
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          curl -X DELETE \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/users/${{github.repository_owner}}/packages/container/${{env.D_IMAGE_NAME}}

  Build-and-Push:
    name: Build and Push (${{ matrix.platform }})
    needs: Prepare
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      matrix:
        platform: 
          - linux/386
          - linux/amd64
          - linux/arm/v7
          - linux/arm64/v8
        include:
          - platform: linux/386
            safe_name: linux-386
          - platform: linux/amd64
            safe_name: linux-amd64
          - platform: linux/arm/v7
            safe_name: linux-arm-v7
          - platform: linux/arm64/v8
            safe_name: linux-arm64-v8
            
    steps:
      - name: Free Disk-Space
        run: |
          df -h
          sudo apt-get clean
          docker system prune -a -f
          sudo rm -rf /usr/local/lib/android /usr/share/dotnet /opt/ghc
          df -h

      - name: Checkout
        uses: actions/checkout@main

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master

      - name: Login to Registry
        uses: docker/login-action@master
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Convert repository name to lowercase
        id: convert
        run: |
          IMAGE_NAME=$(echo $IMAGE_NAME | tr '[:upper:]' '[:lower:]')
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          D_IMAGE_NAME=$(echo $IMAGE_NAME | cut -d'/' -f2)
          echo "D_IMAGE_NAME=$D_IMAGE_NAME" >> $GITHUB_ENV

      - name: Build and push
        id: push
        uses: docker/build-push-action@master
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          push: true
          tags: |
            ${{env.REGISTRY}}/${{env.IMAGE_NAME}}:latest

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@main
        with:
          subject-name: ${{env.REGISTRY}}/${{env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  Finalize:
    name: Finalize Workflow
    needs: Build-and-Push
    runs-on: ubuntu-latest
    steps:
      - name: Delete old workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 0
