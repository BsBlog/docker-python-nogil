name: Publish Latest Docker image

on:
  push:
    branches: ['main']

  workflow_dispatch:
    inputs:
      linux_386:
        description: 'Build for linux/386'
        type: boolean
        default: true
      linux_amd64:
        description: 'Build for linux/amd64'
        type: boolean
        default: true
      linux_arm_v7:
        description: 'Build for linux/arm/v7'
        type: boolean
        default: true
      linux_arm64_v8:
        description: 'Build for linux/arm64/v8'
        type: boolean
        default: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  push_to_registries:
    name: Push docker image to docker hub
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Free Disk-Space
        run: df -h && sudo apt-get clean && docker system prune -a -f && sudo rm -rf /usr/local/lib/android /usr/share/dotnet /opt/ghc && df -h

      - name: Checkout
        uses: actions/checkout@main

      - name: Setup platforms
        id: set-platforms
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            PLATFORMS=""
            if [ "${{ inputs.linux_386 }}" = "true" ]; then PLATFORMS+="linux/386,"; fi
            if [ "${{ inputs.linux_amd64 }}" = "true" ]; then PLATFORMS+="linux/amd64,"; fi
            if [ "${{ inputs.linux_arm_v7 }}" = "true" ]; then PLATFORMS+="linux/arm/v7,"; fi
            if [ "${{ inputs.linux_arm64_v8 }}" = "true" ]; then PLATFORMS+="linux/arm64/v8,"; fi
            PLATFORMS=$(echo $PLATFORMS | sed 's/,$//')
          else
            PLATFORMS="linux/386,linux/amd64,linux/arm/v7,linux/arm64/v8"
          fi
          
          if [ -z "$PLATFORMS" ]; then
            echo "No platforms selected, using default"
            PLATFORMS="linux/amd64"
          fi
          
          echo "Selected platforms: $PLATFORMS"
          echo "PLATFORMS=$PLATFORMS" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master

      - name: Login to Docker Hub
        uses: docker/login-action@master
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Convert repository name to lowercase
        id: convert
        run: |
          IMAGE_NAME_LOWERCASE=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')
          echo "IMAGE_NAME_LOWERCASE=$IMAGE_NAME_LOWERCASE" >> $GITHUB_ENV

      - name: Delete old Docker images
        uses: actions/delete-package-versions@main
        with:
          package-name: ${{ env.IMAGE_NAME_LOWERCASE }}
          package-type: container
          min-versions-to-keep: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push multi-architecture images
        id: push
        uses: docker/build-push-action@master
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: |
            ${{env.REGISTRY}}/${{env.IMAGE_NAME_LOWERCASE}}:latest

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@main
        with:
          subject-name: ${{env.REGISTRY}}/${{env.IMAGE_NAME_LOWERCASE}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Delete old workflow run
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 0
